{"ast":null,"code":"class SearchAndFilter {\n  searchAndFilter(courses, search, subject, minimumCredits, maximumCredits) {\n    if (search !== '') {\n      let coursesAfterSearch = [];\n\n      for (const classes of Object.values(courses)) {\n        for (const keyword of classes.keywords) {\n          if (keyword.includes(search)) {\n            coursesAfterSearch.push(classes);\n            break;\n          }\n        }\n      }\n\n      courses = coursesAfterSearch;\n    }\n\n    if (subject !== 'All') {\n      let coursesAfterSubject = [];\n\n      for (const classes of Object.values(courses)) {\n        // if the subjust matches\n        if (classes.subject === subject) coursesAfterSubject.push(classes);\n      }\n\n      courses = coursesAfterSubject;\n    }\n\n    if (minimumCredits !== '') {\n      let coursesAfterMinimumCredits = [];\n\n      for (const classes of Object.values(courses)) {\n        var min = parseInt(minimumCredits);\n\n        if (classes.credits >= min) {\n          coursesAfterMinimumCredits.push(classes);\n        }\n\n        courses = coursesAfterMinimumCredits;\n      }\n    }\n\n    if (maximumCredits !== '') {\n      let coursesAfterMaximumCredits = [];\n\n      for (const classes of Object.values(courses)) {\n        var max = parseInt(maximumCredits);\n        if (classes.credits <= max) coursesAfterMaximumCredits.push(classes);\n      }\n\n      courses = coursesAfterMaximumCredits;\n    }\n\n    return courses;\n  }\n\n}\n\nexport default SearchAndFilter;","map":{"version":3,"sources":["/Users/kunlunwang/Downloads/test/src/SearchAndFilter.js"],"names":["SearchAndFilter","searchAndFilter","courses","search","subject","minimumCredits","maximumCredits","coursesAfterSearch","classes","Object","values","keyword","keywords","includes","push","coursesAfterSubject","coursesAfterMinimumCredits","min","parseInt","credits","coursesAfterMaximumCredits","max"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AACpBC,EAAAA,eAAe,CAACC,OAAD,EAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,cAA3B,EAA2CC,cAA3C,EAA2D;AAExE,QAAGH,MAAM,KAAK,EAAd,EAAkB;AAChB,UAAII,kBAAkB,GAAG,EAAzB;;AAEA,WAAI,MAAMC,OAAV,IAAqBC,MAAM,CAACC,MAAP,CAAcR,OAAd,CAArB,EAA6C;AAC3C,aAAI,MAAMS,OAAV,IAAqBH,OAAO,CAACI,QAA7B,EAAuC;AACrC,cAAGD,OAAO,CAACE,QAAR,CAAiBV,MAAjB,CAAH,EAA6B;AAC3BI,YAAAA,kBAAkB,CAACO,IAAnB,CAAwBN,OAAxB;AACA;AACD;AACF;AACF;;AACDN,MAAAA,OAAO,GAAGK,kBAAV;AACD;;AAGD,QAAGH,OAAO,KAAK,KAAf,EAAsB;AACpB,UAAIW,mBAAmB,GAAG,EAA1B;;AAEA,WAAI,MAAMP,OAAV,IAAqBC,MAAM,CAACC,MAAP,CAAcR,OAAd,CAArB,EAA6C;AAC3C;AACA,YAAGM,OAAO,CAACJ,OAAR,KAAoBA,OAAvB,EAEEW,mBAAmB,CAACD,IAApB,CAAyBN,OAAzB;AACH;;AACDN,MAAAA,OAAO,GAAGa,mBAAV;AACD;;AAED,QAAGV,cAAc,KAAK,EAAtB,EAAyB;AACvB,UAAIW,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMR,OAAV,IAAqBC,MAAM,CAACC,MAAP,CAAcR,OAAd,CAArB,EAA6C;AAC3C,YAAIe,GAAG,GAAGC,QAAQ,CAACb,cAAD,CAAlB;;AACA,YAAGG,OAAO,CAACW,OAAR,IAAmBF,GAAtB,EAA0B;AACxBD,UAAAA,0BAA0B,CAACF,IAA3B,CAAgCN,OAAhC;AACD;;AACDN,QAAAA,OAAO,GAAGc,0BAAV;AACD;AACF;;AAGC,QAAGV,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIc,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMZ,OAAV,IAAqBC,MAAM,CAACC,MAAP,CAAcR,OAAd,CAArB,EAA6C;AAC3C,YAAImB,GAAG,GAAGH,QAAQ,CAACZ,cAAD,CAAlB;AACA,YAAGE,OAAO,CAACW,OAAR,IAAmBE,GAAtB,EACED,0BAA0B,CAACN,IAA3B,CAAgCN,OAAhC;AACH;;AACDN,MAAAA,OAAO,GAAGkB,0BAAV;AACD;;AAKD,WAAOlB,OAAP;AAED;;AA3DiB;;AAgEtB,eAAeF,eAAf","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, search, subject, minimumCredits, maximumCredits) {\r\n\r\n    if(search !== '') {\r\n      let coursesAfterSearch = [];\r\n      \r\n      for(const classes of Object.values(courses)) {\r\n        for(const keyword of classes.keywords) {\r\n          if(keyword.includes(search)) {\r\n            coursesAfterSearch.push(classes);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      courses = coursesAfterSearch;\r\n    }\r\n    \r\n    \r\n    if(subject !== 'All') {\r\n      let coursesAfterSubject = [];\r\n\r\n      for(const classes of Object.values(courses)) {\r\n        // if the subjust matches\r\n        if(classes.subject === subject)\r\n\r\n          coursesAfterSubject.push(classes)\r\n      }\r\n      courses = coursesAfterSubject;\r\n    }\r\n\r\n    if(minimumCredits !== ''){\r\n      let coursesAfterMinimumCredits = [];\r\n\r\n      for(const classes of Object.values(courses)) {\r\n        var min = parseInt(minimumCredits)\r\n        if(classes.credits >= min){\r\n          coursesAfterMinimumCredits.push(classes);\r\n        }\r\n        courses = coursesAfterMinimumCredits;\r\n      }\r\n    }\r\n\r\n\r\n      if(maximumCredits !== '') {\r\n        let coursesAfterMaximumCredits = [];\r\n  \r\n        for(const classes of Object.values(courses)) {\r\n          var max = parseInt(maximumCredits);\r\n          if(classes.credits <= max)\r\n            coursesAfterMaximumCredits.push(classes);\r\n        }\r\n        courses = coursesAfterMaximumCredits;\r\n      }\r\n\r\n      \r\n  \r\n\r\n      return courses;\r\n\r\n    }\r\n\r\n\r\n    }\r\n  \r\nexport default SearchAndFilter;\r\n"]},"metadata":{},"sourceType":"module"}