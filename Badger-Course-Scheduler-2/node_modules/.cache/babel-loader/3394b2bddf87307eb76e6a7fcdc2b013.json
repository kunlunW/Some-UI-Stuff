{"ast":null,"code":"var _jsxFileName = \"/Users/kunlunwang/Documents/GitHub/3DModeling/react2-alpha-kunlunW/src/Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Accordion from 'react-bootstrap/Accordion';\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n      showModal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, this.props.data.name), this.getExpansionButton()), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, this.props.data.number, \" - \", this.getCredits()), this.getDescription(), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"View sections\")), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: () => this.closeModal(),\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, this.props.data.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, this.getSections()), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, this.getCourseButton(), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.closeModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Close\"))));\n  }\n\n  getCourseButton() {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = () => this.addCourse();\n\n    let buttonText = 'Add Course';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      buttonVariant = 'outline-dark';\n\n      buttonOnClick = () => this.removeCourse();\n\n      buttonText = 'Remove Course';\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, buttonText);\n  }\n\n  getSections() {\n    let sections = [];\n\n    for (let i = 0; i < this.props.data.sections.length; i++) {\n      sections.push( /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, \"Section \" + i, this.getSectionButton(i)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, JSON.stringify(this.props.data.sections[i].time), this.getSubsections(i, this.props.data.sections[i])))));\n    }\n\n    return /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, sections);\n  }\n\n  getSectionButton(section) {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = e => this.addSection(e, section);\n\n    let buttonText = 'Add Section';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        buttonVariant = 'outline-dark';\n\n        buttonOnClick = e => this.removeSection(e, section);\n\n        buttonText = 'Remove Section';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 12\n      }\n    }, buttonText);\n  }\n\n  addCourse() {\n    this.props.addCartCourse({\n      course: this.props.courseKey\n    });\n  }\n\n  removeCourse() {\n    this.props.removeCartCourse({\n      course: this.props.courseKey\n    });\n  }\n\n  addSection(e, section) {\n    e.stopPropagation();\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n  }\n\n  removeSection(e, section) {\n    e.stopPropagation();\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section\n    });\n  }\n\n  addSubsection(e, section, subsection) {\n    e.stopPropagation();\n    this.props.addCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n  }\n\n  removeSubsection(e, section, subsection) {\n    e.stopPropagation();\n    this.props.removeCartCourse({\n      course: this.props.courseKey,\n      section: section,\n      subsection: subsection\n    });\n  }\n\n  getSubsections(sectionKey, sectionValue) {\n    let subsections = [];\n\n    for (let i = 0; i < sectionValue.subsections.length; i++) {\n      subsections.push( /*#__PURE__*/React.createElement(Card, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n        as: Card.Header,\n        variant: \"link\",\n        eventKey: i,\n        style: {\n          height: 63,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, i, this.getSubsectionButton(sectionKey, i)), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n        eventKey: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, JSON.stringify(sectionValue.subsections[i].time)))));\n    }\n\n    return /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, subsections);\n  }\n\n  getSubsectionButton(section, subsection) {\n    let buttonVariant = 'dark';\n\n    let buttonOnClick = e => this.addSubsection(e, section, subsection);\n\n    let buttonText = 'Add Subsection';\n\n    if (this.props.courseKey in this.props.cartCourses) {\n      if (section in this.props.cartCourses[this.props.courseKey]) {\n        if (this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\n          buttonVariant = 'outline-dark';\n\n          buttonOnClick = e => this.removeSubsection(e, section, subsection);\n\n          buttonText = 'Remove Subsection';\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: buttonVariant,\n      onClick: buttonOnClick,\n      style: {\n        position: 'absolute',\n        right: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 12\n      }\n    }, buttonText);\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  setExpanded(value) {\n    this.setState({\n      expanded: value\n    });\n  }\n\n  getExpansionButton() {\n    let buttonText = '▼';\n\n    let buttonOnClick = () => this.setExpanded(true);\n\n    if (this.state.expanded) {\n      buttonText = '▲';\n\n      buttonOnClick = () => this.setExpanded(false);\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      style: {\n        width: 25,\n        height: 25,\n        fontSize: 12,\n        padding: 0,\n        position: 'absolute',\n        right: 20,\n        top: 20\n      },\n      onClick: buttonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, buttonText);\n  }\n\n  getDescription() {\n    if (this.state.expanded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, this.props.data.description);\n    }\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/kunlunwang/Documents/GitHub/3DModeling/react2-alpha-kunlunW/src/Course.js"],"names":["React","Card","Button","Modal","Accordion","Course","Component","constructor","props","state","expanded","showModal","render","width","marginTop","marginBottom","maxWidth","data","name","getExpansionButton","number","getCredits","getDescription","openModal","closeModal","getSections","getCourseButton","buttonVariant","buttonOnClick","addCourse","buttonText","courseKey","cartCourses","removeCourse","sections","i","length","push","Header","height","display","alignItems","getSectionButton","JSON","stringify","time","getSubsections","section","e","addSection","removeSection","position","right","addCartCourse","course","removeCartCourse","stopPropagation","addSubsection","subsection","removeSubsection","sectionKey","sectionValue","subsections","getSubsectionButton","indexOf","setState","setExpanded","value","fontSize","padding","top","description","credits"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false,\r\n      showModal: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <div style={{maxWidth: 250}}>\r\n              {this.props.data.name}\r\n            </div>\r\n            {this.getExpansionButton()}\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}</Card.Subtitle>\r\n          {this.getDescription()}\r\n          <Button variant='dark' onClick={() => this.openModal()}>View sections</Button>\r\n        </Card.Body>\r\n        <Modal show={this.state.showModal} onHide={() => this.closeModal()} centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{this.props.data.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.getSections()}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {this.getCourseButton()}\r\n            <Button variant=\"secondary\" onClick={() => this.closeModal()}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  getCourseButton() {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = () => this.addCourse();\r\n    let buttonText = 'Add Course';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      buttonVariant = 'outline-dark';\r\n      buttonOnClick = () => this.removeCourse();\r\n      buttonText = 'Remove Course'\r\n    }\r\n\r\n    return (\r\n      <Button variant={buttonVariant} onClick={buttonOnClick}>\r\n        {buttonText}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  getSections() {\r\n    let sections = [];\r\n\r\n\r\n    for (let i =0; i < this.props.data.sections.length; i++){\r\n      sections.push (\r\n          <Card key={i}>\r\n            <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n              {\"Section \" + i}\r\n              {this.getSectionButton(i)}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={i}>\r\n              <Card.Body>\r\n                {JSON.stringify(this.props.data.sections[i].time)}\r\n                {this.getSubsections(i, this.props.data.sections[i])}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {sections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSectionButton(section) {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = (e) => this.addSection(e, section);\r\n    let buttonText = 'Add Section';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        buttonVariant = 'outline-dark';\r\n        buttonOnClick = (e) => this.removeSection(e, section);\r\n        buttonText = 'Remove Section';\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  addCourse() {\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey\r\n      }\r\n    );\r\n  }\r\n\r\n  removeCourse() {\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey\r\n      }\r\n    );\r\n  }\r\n\r\n  addSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSection(e, section) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section\r\n      }\r\n    );\r\n  }\r\n\r\n  addSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.addCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSubsection(e, section, subsection) {\r\n    e.stopPropagation();\r\n    this.props.removeCartCourse (\r\n      {\r\n        course: this.props.courseKey,\r\n        section: section,\r\n        subsection: subsection\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getSubsections(sectionKey, sectionValue) {\r\n    let subsections = [];\r\n\r\n    for (let i =0; i < sectionValue.subsections.length; i++){  \r\n    subsections.push (\r\n        <Card key={i}>\r\n          <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey={i} style={{height: 63, display: 'flex', alignItems: 'center'}}>\r\n            {i}\r\n            {this.getSubsectionButton(sectionKey, i)}\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey={i}>\r\n            <Card.Body>\r\n              {JSON.stringify(sectionValue.subsections[i].time)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {subsections}\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSubsectionButton(section, subsection) {\r\n    let buttonVariant = 'dark';\r\n    let buttonOnClick = (e) => this.addSubsection(e, section, subsection);\r\n    let buttonText = 'Add Subsection';\r\n\r\n    if(this.props.courseKey in this.props.cartCourses) {\r\n      if(section in this.props.cartCourses[this.props.courseKey]) {\r\n        if(this.props.cartCourses[this.props.courseKey][section].indexOf(subsection) > -1) {\r\n          buttonVariant = 'outline-dark';\r\n          buttonOnClick = (e) => this.removeSubsection(e, section, subsection);\r\n          buttonText = 'Remove Subsection';\r\n        }\r\n      }\r\n    }\r\n\r\n    return <Button variant={buttonVariant} onClick={buttonOnClick} style={{position: 'absolute', right: 20}}>{buttonText}</Button>\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({showModal: true});\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({showModal: false});\r\n  }\r\n\r\n  setExpanded(value) {\r\n    this.setState({expanded: value});\r\n  }\r\n\r\n  getExpansionButton() {\r\n    let buttonText = '▼';\r\n    let buttonOnClick = () => this.setExpanded(true);\r\n\r\n    if(this.state.expanded) {\r\n      buttonText = '▲';\r\n      buttonOnClick = () => this.setExpanded(false)\r\n    }\r\n\r\n    return (\r\n      <Button variant='outline-dark' style={{width: 25, height: 25, fontSize: 12, padding: 0, position: 'absolute', right: 20, top: 20}} onClick={buttonOnClick}>{buttonText}</Button>\r\n    )\r\n  }\r\n\r\n  getDescription() {\r\n    if(this.state.expanded) {\r\n      return (\r\n        <div>\r\n          {this.props.data.description}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n}\r\n\r\nexport default Course;\r\n"]},"metadata":{},"sourceType":"module"}