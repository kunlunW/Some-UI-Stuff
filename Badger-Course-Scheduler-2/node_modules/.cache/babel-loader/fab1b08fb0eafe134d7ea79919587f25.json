{"ast":null,"code":"var _jsxFileName = \"/Users/kunlunwang/Downloads/test/src/Recommender.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass Recommender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n    this.state = {\n      chips: [],\n      likedKeys: [],\n      selectedSubjects: [],\n      showCourse: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: 'calc(20vw - 5px)',\n        marginLeft: '5px',\n        height: 'calc(100vh - 40px)',\n        position: 'fixed',\n        borderRadius: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, \"Subjects\"), /*#__PURE__*/React.createElement(ButtonToolbar, {\n      style: {\n        overflowX: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      type: \"checkbox\",\n      style: {\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, this.getWordList(this.props.sList))))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: 'calc(20vw - 5px)',\n        marginLeft: '20vw',\n        height: 'calc(100vh - 40px)',\n        position: 'fixed',\n        borderRadius: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        overflowX: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Interest Areas\"), /*#__PURE__*/React.createElement(ButtonToolbar, {\n      style: {\n        overflowX: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      type: \"checkbox\",\n      style: {\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, this.getWordList(this.props.iList))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '40vw',\n        height: 'calc(100vh - 40px)',\n        position: 'fixed',\n        borderRadius: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Recommended Courses\"), this.displayCourse()));\n  } // all keywords to select from\n\n\n  getWordList(dataList) {\n    var temp = [];\n\n    for (const word of dataList) {\n      temp.push( /*#__PURE__*/React.createElement(ToggleButton, {\n        value: word,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, word));\n    }\n\n    return temp;\n  } // Keywords that are from liked courses\n\n\n  getLikedWOrds() {\n    var tempLiked = this.state.likedKeys;\n\n    for (const course of this.props.rCourses) {\n      for (const eKey of course.keywords) {\n        if (tempLiked.indexOf(eKey) === -1) {\n          tempLiked.push(eKey);\n        }\n      }\n    }\n\n    console.log(tempLiked);\n    this.setState({\n      likedKeys: tempLiked\n    });\n  } // keywords entered by the user\n\n\n  getTags() {\n    var newSearchList = this.state.chips;\n    var tags = [];\n\n    for (const tag of newSearchList) {\n      console.log(tag);\n      tags.push( /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, tag, \" \", /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => this.removeTag(tag),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, \"X\")));\n    }\n\n    return tags;\n  } // remove keywords entered by the user\n\n\n  removeTag(rTag) {\n    var newSearchList = this.state.chips;\n\n    for (const tag of newSearchList) {\n      if (tag === rTag) {\n        newSearchList.splice(newSearchList.indexOf(tag), 1);\n      }\n    }\n\n    this.setState({\n      chips: newSearchList\n    });\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, newSearchList, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value, this.state.buttonValue));\n  }\n\n  getSubjectOptions() {\n    let subjectOptions = [];\n\n    for (const subject of this.props.sList) {\n      subjectOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: subject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }\n      }, subject));\n    }\n\n    return subjectOptions;\n  }\n\n  displayCourse() {\n    var tempCourses = [];\n\n    for (const course of Object.entries(this.props.aCourses)) {\n      console.log(course);\n      tempCourses.push( /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, course[1].name)));\n    }\n\n    return tempCourses;\n  }\n\n}\n\nexport default Recommender;","map":{"version":3,"sources":["/Users/kunlunwang/Downloads/test/src/Recommender.js"],"names":["React","Card","ListGroup","Button","ToggleButton","ToggleButtonGroup","ButtonToolbar","CardColumns","Recommender","Component","constructor","props","input","createRef","state","chips","likedKeys","selectedSubjects","showCourse","render","width","marginLeft","height","position","borderRadius","overflowX","flexDirection","getWordList","sList","iList","displayCourse","dataList","temp","word","push","getLikedWOrds","tempLiked","course","rCourses","eKey","keywords","indexOf","console","log","setState","getTags","newSearchList","tags","tag","removeTag","rTag","splice","setCourses","searchAndFilter","courses","subject","current","value","minimumCredits","maximumCredits","buttonValue","getSubjectOptions","subjectOptions","tempCourses","Object","entries","aCourses","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\n\n\nclass Recommender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.input = React.createRef();\n        this.state = {\n            chips: [],\n            likedKeys:[],\n            selectedSubjects:[],\n            showCourse:[]\n        };\n    }\n    render() {\n        return(\n            <div>\n                <Card style={{width: 'calc(20vw - 5px)', marginLeft: '5px', height: 'calc(100vh - 40px)', position: 'fixed', borderRadius: '20px'}}>\n                    <Card.Body>\n                        <Card.Title>Subjects</Card.Title>\n                        <ButtonToolbar style={{overflowX:'scroll'}}>\n                            <ToggleButtonGroup type=\"checkbox\" style={{flexDirection: 'column'}}>\n                                {this.getWordList(this.props.sList)}\n                            </ToggleButtonGroup>\n                        </ButtonToolbar>\n                    </Card.Body>\n                </Card>\n                <Card style={{width: 'calc(20vw - 5px)', marginLeft: '20vw', height: 'calc(100vh - 40px)', position: 'fixed', borderRadius: '20px'}}>\n                    <Card.Body style={{overflowX:'scroll'}}>\n                        <Card.Title>Interest Areas</Card.Title>\n                        <ButtonToolbar style={{overflowX:'scroll'}}>\n                            <ToggleButtonGroup type=\"checkbox\" style={{flexDirection: 'column'}}>\n                                {this.getWordList(this.props.iList)}\n                            </ToggleButtonGroup>\n                        </ButtonToolbar>\n                    </Card.Body>\n                </Card>\n                <div style={{marginLeft: '40vw', height: 'calc(100vh - 40px)', position: 'fixed', borderRadius: '20px'}}>\n                    <h2>Recommended Courses</h2>\n                    {this.displayCourse()}\n                </div>\n            </div>\n        )\n    }\n\n    // all keywords to select from\n    getWordList(dataList){\n        var temp = [];\n        for(const word of dataList){\n            temp.push(\n                <ToggleButton value = {word}>{word}</ToggleButton>\n            )\n        }\n        return temp;\n    }\n\n    // Keywords that are from liked courses\n    getLikedWOrds(){\n        var tempLiked = this.state.likedKeys;\n        for(const course of this.props.rCourses){\n            for(const eKey of course.keywords){\n                if(tempLiked.indexOf(eKey) === -1){\n                    tempLiked.push(eKey);\n                }\n            }\n        }\n        console.log(tempLiked);\n        this.setState({likedKeys: tempLiked});\n    }\n\n    // keywords entered by the user\n    getTags(){\n        var newSearchList = this.state.chips;\n        var tags = [];\n        for(const tag of newSearchList){\n          console.log(tag);\n          tags.push(\n              <ListGroup.Item>{tag} <Button variant=\"primary\" onClick={()=>this.removeTag(tag)}>X</Button></ListGroup.Item>\n          )\n        }\n        return tags;\n    }\n\n    // remove keywords entered by the user\n    removeTag(rTag){\n        var newSearchList = this.state.chips;\n        for(const tag of newSearchList){\n          if(tag === rTag){\n            newSearchList.splice(newSearchList.indexOf(tag), 1);\n          }\n        }\n        this.setState({chips: newSearchList})\n        this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, newSearchList, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value, this.state.buttonValue));\n    }\n\n    getSubjectOptions() {\n        let subjectOptions = [];\n        for(const subject of this.props.sList) {\n          subjectOptions.push(<option key={subject}>{subject}</option>);\n        }\n        return subjectOptions;\n    }\n\n    displayCourse(){\n        var tempCourses = [];\n        for(const course of Object.entries(this.props.aCourses)){\n            console.log(course);\n            tempCourses.push(\n                <Card>\n                    <Card.Title>{course[1].name}</Card.Title>\n                </Card>\n            )\n        }\n        return tempCourses;\n    }\n\n\n}\n\nexport default Recommender;"]},"metadata":{},"sourceType":"module"}